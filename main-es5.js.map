{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/favorites/add-city-modal/add-city-modal.component.ts","webpack:///src/app/components/favorites/add-city-modal/add-city-modal.component.html","webpack:///src/app/components/favorites/favorites.component.ts","webpack:///src/app/components/favorites/favorites.component.html","webpack:///src/app/components/favorites/favorites.service.ts","webpack:///src/app/components/weather/weather-item/weather-item.component.ts","webpack:///src/app/components/weather/weather-item/weather-item.component.html","webpack:///src/app/components/weather/weather-week-view/weather-week-view.component.ts","webpack:///src/app/components/weather/weather-week-view/weather-week-view.component.html","webpack:///src/app/components/weather/weather.service.ts","webpack:///src/app/controls/main-header/main-header.component.ts","webpack:///src/app/controls/main-header/main-header.component.html","webpack:///src/app/controls/search-location/search-location.component.ts","webpack:///src/app/controls/search-location/search-location.component.html","webpack:///src/app/controls/weather-icon/weather-icon.component.ts","webpack:///src/app/providers/material/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddCityModalComponent","dialogRef","selectedLocation","location","close","getSelectedLocation","closeModal","FavoritesComponent","favoriteService","dialog","toastService","getFavorites","favoriteList$","getFavoriteList","open","width","data","afterClosed","subscribe","result","console","log","success","addToFavorites","message","LocalizedName","showToast","removeFromFavorite","Key","duration","panelClass","FavoritesService","favoriteListSubject","isNotExist","checkIfExist","newList","getFavoritesSync","push","next","localStorage","setItem","favoriteLocalStorageName","JSON","stringify","locationKey","filteredList","filter","f","localStorageData","getItem","parse","asObservable","find","providedIn","WeatherItemComponent","weatherService","locationData","isFavoriteContext","isDataReady","getCurrentWeather","emit","getCurrentWeatherByLocation","weatherItem","height","opacity","animations","WeatherWeekViewComponent","searchControl","includedInFavorite","getDeviceLocation","navigator","geolocation","getCurrentPosition","position","getLocationKeyByGeoPosition","coords","latitude","longitude","updateLocation","error","defaultLocation","weeklyData$","getWeatherForecast","currentWeather","currentWeatherIcon","getCurrentWeatherIcon","weatherIcon","WeatherService","http","Country","ID","selectedLocationSubject","get","baseApiUrl","apiKey","pipe","response","convertDailyWeatherToMainModel","DailyForecasts","searchInput","convertCurrentWeatherToMainModel","lat","lon","convertLocationToMainModel","date","LocalObservationDateTime","WeatherIcon","weatherDescription","WeatherText","temperature","max","Value","Temperature","Metric","Unit","UnitType","min","newLocationModel","dailyWeatherData","map","item","Date","Day","Icon","IconPhrase","Maximum","Minimum","MainHeaderComponent","title","SearchLocationComponent","setSelectedLocation","valueChanges","input","valid","length","suggestedLocationList$","getLocationSuggestion","selectLocation","WeatherIconComponent","iconRegistry","sanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","MaterialModule","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KADqB,EAErB;AACED,UAAI,EAAE,EADR;AAEEE,gBAAU,EAAE,OAFd;AAGEC,eAAS,EAAE;AAHb,KAFqB,EAOrB;AAAEH,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE;AAAhC,KAPqB,CAAvB;;QAeaG,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACrB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaU,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AACA;;AAEI;;AAEJ;;;;;;;;;sEDEaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AERzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBARJ,CACP,uEADO,EAEP,mFAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,4FALO,EAMP,kEANO,CAQI;;;;0HAGFA,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,2HAmBkB,EAlBlB,4GAkBkB,EAjBlB,4FAiBkB,EAhBlB,mGAgBkB,EAflB,4GAekB,EAdlB,mHAckB,EAblB,gGAakB;AAbC,kBAGnB,uEAHmB,EAInB,mFAJmB,EAKnB,oEALmB,EAMnB,qEANmB,EAOnB,4FAPmB,EAQnB,kEARmB;AAaD,O;AALC,K;;;;;sEAKVA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,2HAFY,EAGZ,4GAHY,EAIZ,4FAJY,EAKZ,mGALY,EAMZ,4GANY,EAOZ,mHAPY,EAQZ,gGARY,CADN;AAWRN,iBAAO,EAAE,CACP,uEADO,EAEP,mFAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,4FALO,EAMP,kEANO,CAXD;AAmBRO,mBAAS,EAAE,EAnBH;AAoBRC,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;ACvCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,qB;;;AAIX,qCACSC,SADT,EACuD;AAAA;;AAA9C,aAAAA,SAAA,GAAAA,SAAA;AAHT,aAAAC,gBAAA,GAAkC,IAAlC;AAIK;;;;mCAEG,CACP;;;4CAEmBC,Q,EAAuB;AACzC,eAAKD,gBAAL,GAAwBC,QAAxB;AACD;;;qCAES;AACR,eAAKF,SAAL,CAAeG,KAAf;AACD;;;;;;;uBAjBUJ,qB,EAAqB,sI;AAAA,K;;;YAArBA,qB;AAAqB,yC;AAAA,c;AAAA,a;AAAA,wM;AAAA;AAAA;ACTlC;;AAAI;;AAAsB;;AAE1B;;AAAqB;AAAA,mBAAuB,IAAAK,mBAAA,QAAvB;AAAkD,WAAlD;;AAAoD;;AAEzE;;AACI;;AAAmB;AAAA,mBAAS,IAAAC,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAK;;AAC/C;;AAAwH;;AAAG;;AAC/H;;;;AADuC;;AAAA,6GAAqC,UAArC,EAAqC,qBAArC;;;;;;;;;sEDG1BN,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTP,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOI;;AACI;;AACI;;AAAuE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvE;;AACJ;;AACJ;;;;;;AAH0B;;AAAA,+FAAyB,mBAAzB,EAAyB,IAAzB;;;;;;;;AAK1B;;AACQ;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAC/C;;AAAU;;AAAG;;AACjB;;AACR;;;;;;;;AAEA;;AACI;;AACI;;AACA;;AAAuB;;AAA8B;;AACrD;;AAAuB;;AAAgC;;AACvD;;AAAuB;;AAAiD;;AAC5E;;AACA;;AACA;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AAAU;;AAAG;;AACjB;;AACJ;;;;QDlBSY,kB;;;AAIX,kCACUC,eADV,EAESC,MAFT,EAGUC,YAHV,EAGmC;AAAA;;AAFzB,aAAAF,eAAA,GAAAA,eAAA;AACD,aAAAC,MAAA,GAAAA,MAAA;AACC,aAAAC,YAAA,GAAAA,YAAA;AACL;;;;mCAEG;AACN,eAAKC,YAAL;AAED;;;uCAEW;AACV,eAAKC,aAAL,GAAqB,KAAKJ,eAAL,CAAqBK,eAArB,EAArB;AACD;;;uCAEW;AAAA;;AACV,cAAMZ,SAAS,GAAG,KAAKQ,MAAL,CAAYK,IAAZ,CAAiB,8FAAjB,EAAwC;AACxDC,iBAAK,EAAE,OADiD;AAExDC,gBAAI,EAAE;AAFkD,WAAxC,CAAlB;AAKAf,mBAAS,CAACgB,WAAV,GAAwBC,SAAxB,CAAkC,UAACC,MAAD,EAA2B;AAC3D,gBAAIA,MAAJ,EAAY;AACVC,qBAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,kBAAMG,OAAO,GAAY,KAAI,CAACd,eAAL,CAAqBe,cAArB,CAAoCJ,MAApC,CAAzB;;AACA,kBAAMK,OAAO,GACXF,OAAO,GAAGH,MAAM,CAACM,aAAP,GAAuB,kCAA1B,GAA+D,+CADxE;;AAGA,mBAAI,CAACC,SAAL,CAAeF,OAAf,EAAwBF,OAAxB;AACD;AACF,WATD;AAUD;;;2CAEkBnB,Q,EAAyB;AAC1C,eAAKK,eAAL,CAAqBmB,kBAArB,CAAwCxB,QAAQ,CAACyB,GAAjD;AACA,cAAMJ,OAAO,GAAGrB,QAAQ,CAACsB,aAAT,GAAyB,mBAAzC;AACA,eAAKC,SAAL,CAAeF,OAAf,EAAwB,IAAxB;AACD;;;kCAESA,O,EAAiBF,O,EAAgB;AACzC,eAAKZ,YAAL,CAAkBI,IAAlB,CAAuBU,OAAvB,EAAgC,EAAhC,EAAoC;AAClCK,oBAAQ,EAAE,IADwB;AAElCC,sBAAU,EAAER,OAAO,GAAG,CAAC,eAAD,CAAH,GAAuB,CAAC,aAAD;AAFR,WAApC;AAID;;;;;;;uBAhDUf,kB,EAAkB,oI,EAAA,mI,EAAA,wI;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,2qB;AAAA;AAAA;ACb/B;;AACI;;AACI;;AAAkB;;AAAY;;AAClC;;AACJ;;AAEA;;AACI;;;;AAOA;;;;AAMA;;;;AAcJ;;;;;;;;;AA3BkB;;AAAA;;AAOA;;AAAA;;AAM0B;;AAAA;;;;;;;;;;sEDP/BA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTd,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoC,gB;;;AAKX,kCAAc;AAAA;;AAHN,aAAAC,mBAAA,GAAsB,IAAI,oDAAJ,CAAqC,EAArC,CAAtB;AAGS;;;;uCAEF7B,Q,EAAuB;AAEpC,cAAM8B,UAAU,GAAG,CAAC,KAAKC,YAAL,CAAkB/B,QAAQ,CAACyB,GAA3B,CAApB;;AACA,cAAIK,UAAJ,EAAgB;AACd,gBAAIE,OAAO,GAAG,KAAKC,gBAAL,EAAd;AACAD,mBAAO,CAACE,IAAR,CAAalC,QAAb;AACA,iBAAK6B,mBAAL,CAAyBM,IAAzB,CAA8BH,OAA9B;AACAI,wBAAY,CAACC,OAAb,CAAqB,KAAKC,wBAA1B,EAAoDC,IAAI,CAACC,SAAL,CAAeR,OAAf,CAApD;AACD;;AAED,iBAAOF,UAAP;AACD;;;2CAEkBW,W,EAAmB;AACpC,cAAMC,YAAY,GAAG,KAAKT,gBAAL,GAAwBU,MAAxB,CAA+B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACnB,GAAF,KAAUgB,WAAd;AAAA,WAAhC,CAArB;AACAL,sBAAY,CAACC,OAAb,CAAqB,KAAKC,wBAA1B,EAAoDC,IAAI,CAACC,SAAL,CAAeE,YAAf,CAApD;AACA,eAAKb,mBAAL,CAAyBM,IAAzB,CAA8BO,YAA9B;AACD;;;2CAEsB;AACrB,cAAMG,gBAAgB,GAAGT,YAAY,CAACU,OAAb,CAAqB,KAAKR,wBAA1B,CAAzB;;AACA,cAAGO,gBAAH,EAAoB;AAClB,mBAAON,IAAI,CAACQ,KAAL,CAAWF,gBAAX,CAAP;AACD;;AACD,iBAAO,EAAP;AACD;;;0CAEc;AACb,eAAKhB,mBAAL,CAAyBM,IAAzB,CAA8B,KAAKF,gBAAL,EAA9B;AACA,iBAAO,KAAKJ,mBAAL,CAAyBmB,YAAzB,EAAP;AACD;;;qCAEYP,W,EAAmB;AAC9B,iBAAO,KAAKR,gBAAL,GAAwBgB,IAAxB,CAA6B,UAAAL,CAAC;AAAA,mBAAIA,CAAC,CAACnB,GAAF,KAAUgB,WAAd;AAAA,WAA9B,KAA4D,IAAnE;AACD;;;;;;;uBAzCUb,gB;AAAgB,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVsB,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;ACP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEI;;AACI;;AAA4D;AAAA;;AAAA;;AAAA;AAAA;;AACxD;;AAAU;;AAAqB;;AAC/B;;AACJ;;AACJ;;;;;;AAKI;;AACI;;AACA;;AAA2B;;AAE3B;;AACJ;;;;;;AAJI;;AAAA;;AAC2B;;AAAA;;;;;;AAI/B;;AAAwC;;;;AAAmC;;;;;;AAAnC;;AAAA;;;;;;AAMpC;;AACI;;;;AAAwD;;;;;;AAAxD;;AAAA;;;;;;AAzBhB;;AAEI;;AAOA;;AAEI;;AACA;;AAMA;;AAEJ;;AACA;;AACI;;AACI;;AAAsB;;;;AAAwD;;AAC9E;;AAEJ;;AACA;;AACI;;AACJ;;AACJ;;AAEJ;;;;;;AAhCsE;;AAEpD;;AAAA;;AASqB;;AAAA;;AACT;;AAAA;;AAMJ;;AAAA;;AAKQ;;AAAA;;AACG;;AAAA;;AAIzB;;AAAA;;;;QDHCC,oB;;;AASX,oCACUC,cADV,EACwC;AAAA;;AAA9B,aAAAA,cAAA,GAAAA,cAAA;AAPD,aAAAC,YAAA,GAA8B,IAA9B;AACA,aAAAC,iBAAA,GAAoB,KAApB;AACC,aAAA9B,kBAAA,GAAyC,IAAI,0DAAJ,EAAzC;AAEV,aAAA+B,WAAA,GAAc,KAAd;AAIK;;;;mCAEG;AACN,cAAI,KAAKD,iBAAL,IAA0B,KAAKD,YAAnC,EAAiD;AAC/C,iBAAKG,iBAAL;AACD,WAFD,MAEO;AACL,iBAAKD,WAAL,GAAmB,IAAnB;AACD;AACF;;;oDAE2B;AAC1B,eAAK/B,kBAAL,CAAwBiC,IAAxB;AACD;;;4CAEmB;AAAA;;AAClB,eAAKL,cAAL,CAAoBM,2BAApB,CAAgD,KAAKL,YAAL,CAAkB5B,GAAlE,EAAuEV,SAAvE,CAAiF,UAAAC,MAAM,EAAI;AACzF,kBAAI,CAAC2C,WAAL,GAAmB3C,MAAnB;AACA,kBAAI,CAACuC,WAAL,GAAmB,IAAnB;AACD,WAHD;AAID;;;;;;;uBA9BUJ,oB,EAAoB,gI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,ohB;AAAA;AAAA;ACzBjC;;AAkCA;;;;AAlCkD;;;;;;;mBDUpC,CACV,oEAAQ,mBAAR,EACE,CACE,uEAAW,QAAX,EACE,CACE,kEAAM;AAAES,gBAAM,EAAE,CAAV;AAAaC,iBAAO,EAAE;AAAtB,SAAN,CADF,EAEE,oEAAQ,eAAR,EACE,kEAAM;AAAED,gBAAM,EAAE,GAAV;AAAeC,iBAAO,EAAE;AAAxB,SAAN,CADF,CAFF,CADF,CADF,CADF,CADU;;;;;;sEAeDV,oB,EAAoB;cAnBhC,uDAmBgC;eAnBtB;AACT7D,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD,CAHF;AAITsE,oBAAU,EAAE,CACV,oEAAQ,mBAAR,EACE,CACE,uEAAW,QAAX,EACE,CACE,kEAAM;AAAEF,kBAAM,EAAE,CAAV;AAAaC,mBAAO,EAAE;AAAtB,WAAN,CADF,EAEE,oEAAQ,eAAR,EACE,kEAAM;AAAED,kBAAM,EAAE,GAAV;AAAeC,mBAAO,EAAE;AAAxB,WAAN,CADF,CAFF,CADF,CADF,CADF,CADU;AAJH,S;AAmBsB,Q;;;;;;gBAE9B;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AE9BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSY;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAEzD;;AAAU;;AAAI;;AAClB;;;;;;AAkBJ;;AACI;;AACI;;AACJ;;AACJ;;;;;;AAF0B;;AAAA;;;;;;;;;;;;;;AAhClC;;AAEI;;AAEI;;AACI;;AAAqB;AAAA;;AAAA;;AAAA;AAAA;;AAAoD;;AAC7E;;AAEA;;AACI;;AAIJ;;AAEA;;AACI;;AAA2B;;AACvB;;AACI;;AAEJ;;AACJ;;AACA;;AAAgC;;AAC5B;;AAAQ;;;;AAAsE;;AAClF;;AACJ;;AACJ;;AAGA;;AACI;;;;AAKJ;;AAEJ;;;;;;AAlCQ;;AAAA;;AAOQ;;AAAA;;AAMuB;;AAAA;;AAEnB;;AAAA;;AAIwB;;AAAA;;AACpB;;AAAA;;AAOF;;AAAA;;;;;;AAStB;;AACI;;AACI;;AACI;;AACA;;AAAuB;;AAAU;;AACrC;;AACA;;AACJ;;AACJ;;;;QDhCaE,wB;;;AAWX,wCACUX,cADV,EAEU/C,eAFV,EAGUE,YAHV,EAGmC;AAAA;;AAFzB,aAAA6C,cAAA,GAAAA,cAAA;AACA,aAAA/C,eAAA,GAAAA,eAAA;AACA,aAAAE,YAAA,GAAAA,YAAA;AAVV,aAAAyD,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAKA,aAAAC,kBAAA,GAAqB,KAArB;AACA,aAAAV,WAAA,GAAc,KAAd;AAKK;;;;mCAEG;AACN,eAAKW,iBAAL;AACD;;;4CAEgB;AAAA;;AACf,cAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,qBAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AACrD,oBAAI,CAAClB,cAAL,CAAoBmB,2BAApB,CAAgDD,QAAQ,CAACE,MAAT,CAAgBC,QAAhE,EAA0EH,QAAQ,CAACE,MAAT,CAAgBE,SAA1F,EACG3D,SADH,CACa,UAACC,MAAD,EAA2B;AACpC,sBAAI,CAACjB,gBAAL,GAAwBiB,MAAxB;;AACA,sBAAI,CAAC2D,cAAL,CAAoB,MAAI,CAAC5E,gBAAzB;;AACA,sBAAI,CAACwD,WAAL,GAAmB,IAAnB;AACD,eALH,EAME,UAAAqB,KAAK,EAAI;AACP,sBAAI,CAACrD,SAAL,CAAeqD,KAAK,CAACvD,OAArB,EAA8B,KAA9B;AACD,eARH;AASD,aAVD;AAWD,WAZD,MAYO;AACL,iBAAKtB,gBAAL,GAAwB,KAAKqD,cAAL,CAAoByB,eAA5C;AACD;AACF;;;4CAEmB7E,Q,EAAuB;AACzC,eAAKD,gBAAL,GAAwBC,QAAxB;AACA,eAAK2E,cAAL,CAAoB3E,QAApB;AACD;;;2CAEkByC,W,EAAmB;AACpC,eAAKqC,WAAL,GAAmB,KAAK1B,cAAL,CAAoB2B,kBAApB,CAAuCtC,WAAvC,CAAnB;AACD;;;oDAE2BA,W,EAAmB;AAAA;;AAC7C,eAAKW,cAAL,CAAoBM,2BAApB,CAAgDjB,WAAhD,EAA6D1B,SAA7D,CAAuE,UAAAC,MAAM,EAAI;AAC/E,kBAAI,CAACgE,cAAL,GAAsBhE,MAAtB;AACA,kBAAI,CAACiE,kBAAL,wBAAwC,MAAI,CAAC7B,cAAL,CAAoB8B,qBAApB,CAA0C,MAAI,CAACF,cAAL,CAAoBG,WAA9D,CAAxC;AACD,WAHD,EAIE,UAAAP,KAAK,EAAI;AACP,kBAAI,CAACrD,SAAL,CAAeqD,KAAK,CAACvD,OAArB,EAA8B,KAA9B;AACD,WANH;AAOD;;;gDAEoB;AAEnB,cAAMF,OAAO,GAAY,KAAKd,eAAL,CAAqBe,cAArB,CAAoC,KAAKrB,gBAAzC,CAAzB;AACA,eAAKkE,kBAAL,GAA0B9C,OAA1B;AACA,cAAME,OAAO,GACXF,OAAO,GAAG,KAAKpB,gBAAL,CAAsBuB,aAAtB,GAAsC,kCAAzC,GAA8E,+CADvF;AAGA,eAAKC,SAAL,CAAeF,OAAf,EAAwB,IAAxB;AACD;;;uCAEcrB,Q,EAAuB;AACpC,eAAK+E,kBAAL,CAAwB/E,QAAQ,CAACyB,GAAjC;AACA,eAAKiC,2BAAL,CAAiC1D,QAAQ,CAACyB,GAA1C;AACA,eAAKwC,kBAAL,GAA0B,KAAK5D,eAAL,CAAqB0B,YAArB,CAAkC/B,QAAQ,CAACyB,GAA3C,CAA1B;AACD,S,CAED;;;;kCAEUJ,O,EAAiBF,O,EAAgB;AACzC,eAAKZ,YAAL,CAAkBI,IAAlB,CAAuBU,OAAvB,EAAgC,EAAhC,EAAoC;AAClCK,oBAAQ,EAAE,IADwB;AAElCC,sBAAU,EAAER,OAAO,GAAG,CAAC,eAAD,CAAH,GAAuB,CAAC,aAAD;AAFR,WAApC;AAKD;;;;;;;uBAlFU4C,wB,EAAwB,gI,EAAA,8I,EAAA,wI;AAAA,K;;;YAAxBA,wB;AAAwB,4C;AAAA,c;AAAA,a;AAAA,iyB;AAAA;AAAA;ACfrC;;AAuCA;;;;AAvCc;;AAuCA;;AAAA;;;;;;;;;;sEDxBDA,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTzE,kBAAQ,EAAE,uBADD;AAETC,qBAAW,EAAE,oCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEdrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYa4F,c;;;AAaX,8BACUC,IADV,EAC0B;AAAA;;AAAhB,aAAAA,IAAA,GAAAA,IAAA;AAZV,aAAAR,eAAA,GAAiC;AAC/BpD,aAAG,EAAE,MAD0B;AAE/BH,uBAAa,EAAE,UAFgB;AAG/BgE,iBAAO,EAAE;AACPC,cAAE,EAAE,IADG;AAEPjE,yBAAa,EAAE;AAFR;AAHsB,SAAjC;AASQ,aAAAkE,uBAAA,GAA0B,IAAI,oDAAJ,CAAmC,KAAKX,eAAxC,CAA1B;AAIH;;;;2CAGcpC,W,EAAmB;AAAA;;AACpC,iBAAO,KAAK4C,IAAL,CACJI,GADI,WAGA,yEAAYC,UAHZ,sCAGkDjD,WAHlD,qBAGwE,yEAAYkD,MAHpF,mBAKJC,IALI,CAMH,2DAAI,UAACC,QAAD;AAAA,mBACF,MAAI,CAACC,8BAAL,CAAoCD,QAAQ,CAACE,cAA7C,CADE;AAAA,WAAJ,CANG,CAAP;AAUD;;;8CAGqBC,W,EAAmB;AACvC,iBAAO,KAAKX,IAAL,CACJI,GADI,WAEA,yEAAYC,UAFZ,sDAEkE,yEAAYC,MAF9E,gBAE0FK,WAF1F,EAAP;AAID;;;oDAE2BvD,W,EAAmB;AAAA;;AAC7C,iBAAO,KAAK4C,IAAL,CAAUI,GAAV,WACF,yEAAYC,UADV,mCAC6CjD,WAD7C,qBACmE,yEAAYkD,MAD/E,GAELC,IAFK,CAGL,2DAAI,UAACZ,cAAD;AAAA,mBACF,MAAI,CAACiB,gCAAL,CAAsCjB,cAAc,CAAC,CAAD,CAApD,CADE;AAAA,WAAJ,CAHK,CAAP;AAMD;;;oDAE2BkB,G,EAAaC,G,EAAW;AAAA;;AAClD,iBAAO,KAAKd,IAAL,CACJI,GADI,WAEA,yEAAYC,UAFZ,4DAEwE,yEAAYC,MAFpF,gBAEgGO,GAFhG,cAEuGC,GAFvG,GAGHP,IAHG,CAIH,2DAAI,UAAC5E,MAAD;AAAA,mBACF,MAAI,CAACoF,0BAAL,CAAgCpF,MAAhC,CADE;AAAA,WAAJ,CAJG,CAAP;AAQD;;;yDAEgCgE,c,EAA8B;AAC7D,cAAMrB,WAAW,GAAqB;AACpC0C,gBAAI,EAAErB,cAAc,CAACsB,wBADe;AAEpCnB,uBAAW,EAAEH,cAAc,CAACuB,WAFQ;AAGpCC,8BAAkB,EAAExB,cAAc,CAACyB,WAHC;AAIpCC,uBAAW,EAAE;AACXC,iBAAG,EACH;AACEC,qBAAK,EAAE5B,cAAc,CAAC6B,WAAf,CAA2BC,MAA3B,CAAkCF,KAD3C;AAEEG,oBAAI,EAAE/B,cAAc,CAAC6B,WAAf,CAA2BC,MAA3B,CAAkCC,IAF1C;AAGEC,wBAAQ,EAAEhC,cAAc,CAAC6B,WAAf,CAA2BC,MAA3B,CAAkCE;AAH9C,eAFW;AAOXC,iBAAG,EAAE;AAPM;AAJuB,WAAtC;AAcA,iBAAOtD,WAAP;AACD;;;mDAE0B3D,Q,EAAa;AACtC,cAAMkH,gBAAgB,GAAkB;AACtCzF,eAAG,EAAEzB,QAAQ,CAACyB,GADwB;AAEtCH,yBAAa,EAAEtB,QAAQ,CAACsB,aAFc;AAGtCgE,mBAAO,EAAE;AACPC,gBAAE,EAAEvF,QAAQ,CAACsF,OAAT,CAAiBC,EADd;AAEPjE,2BAAa,EAAEtB,QAAQ,CAACsF,OAAT,CAAiBhE;AAFzB;AAH6B,WAAxC;AAQA,iBAAO4F,gBAAP;AACD;;;uDAG8BC,gB,EAAkC;AAC/D,cAAMxD,WAAW,GAAuBwD,gBAAgB,CAACC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,mBAAK;AACpEhB,kBAAI,EAAEgB,IAAI,CAACC,IADyD;AAEpEnC,yBAAW,EAAEkC,IAAI,CAACE,GAAL,CAASC,IAF8C;AAGpEhB,gCAAkB,EAAEa,IAAI,CAACE,GAAL,CAASE,UAHuC;AAIpEf,yBAAW,EAAE;AACXC,mBAAG,EAAEU,IAAI,CAACR,WAAL,CAAiBa,OADX;AAEXT,mBAAG,EAAEI,IAAI,CAACR,WAAL,CAAiBc;AAFX;AAJuD,aAAL;AAAA,WAAzB,CAAxC;AASA,iBAAOhE,WAAP;AACD,S,CAGD;;;;8CACsBwB,W,EAAqB;AACzC,cAAIA,WAAW,IAAI,CAAnB,EAAsB;AACpB,mBAAO,OAAP;AACD;;AACD,cAAIA,WAAW,KAAK,CAApB,EAAuB;AACrB,mBAAO,cAAP;AACD;;AACD,cAAIA,WAAW,IAAI,EAAnB,EAAuB;AACrB,mBAAO,OAAP;AACD;;AACD,cAAIA,WAAW,IAAI,EAAnB,EAAuB;AACrB,mBAAO,MAAP;AACD;;AACD,cAAIA,WAAW,IAAI,EAAnB,EAAuB;AACrB,mBAAO,MAAP;AACD;;AACD,cAAIA,WAAW,IAAI,EAAnB,EAAuB;AACrB,mBAAO,OAAP;AACD;;AACD,cAAIA,WAAW,IAAI,EAAnB,EAAuB;AACrB,mBAAO,OAAP;AACD;AACF;;;;;;;uBA/HUC,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVlC,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAOa0E,mB;;;AAEX,qCAAc;AAAA;;AAKd,aAAAC,KAAA,GAAQ,gBAAR;AALiB;;;;mCAET,CACP;;;;;;;uBALUD,mB;AAAmB,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,4K;AAAA;AAAA;ACPhC;;AACI;;AACI;;AAEI;;AAEA;;AAAe;;AAAS;;AAC5B;;AACA;;AACA;;AACI;;AAAU;;AAAI;;AACd;;AACJ;;AACJ;;AACJ;;;;AAZiC;;AAAA;;AAIN;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDFdA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTtI,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;AEPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSgB;;AAAyC;;AAAoC;;;;;;AAKzE;;AACI;;AAA4B;;AAAwB;;AACpD;;AAA2B;;AAAkC;;AACjE;;;;;;AAHkE;;AAClC;;AAAA;;AACD;;AAAA;;;;QDJtCsI,uB;;;AAMX,uCACU1E,cADV,EACwC;AAAA;;AAA9B,aAAAA,cAAA,GAAAA,cAAA;AANA,aAAA2E,mBAAA,GAAmD,IAAI,0DAAJ,EAAnD;AAEV,aAAA/D,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAKK;;;;mCAEG;AAAA;;AACN,eAAKA,aAAL,CAAmBgE,YAAnB,CACGpC,IADH,CAEI,oEAAa,GAAb,CAFJ,EAIG7E,SAJH,CAIa,UAACkH,KAAD,EAAW;AACpB,gBAAI,MAAI,CAACjE,aAAL,CAAmBkE,KAAnB,IAA4BD,KAAK,CAACE,MAAN,IAAgB,CAAhD,EAAmD;AACjD,oBAAI,CAACC,sBAAL,GAA8B,MAAI,CAAChF,cAAL,CAAoBiF,qBAApB,CAA0CJ,KAA1C,CAA9B;AACD;AACF,WARH;AASD;;;kCAESjI,Q,EAAyB;AACjC,cAAIA,QAAJ,EAAc;AAAE,mBAAOA,QAAQ,CAACsB,aAAhB;AAAgC;AACjD;;;uCAEctB,Q,EAAyB;AACtC,eAAK+H,mBAAL,CAAyBtE,IAAzB,CAA8BzD,QAA9B;AACD;;;;;;;uBA5BU8H,uB,EAAuB,0J;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,wgB;AAAA;AAAA;ACZpC;;AAEI;;AACI;;AACI;;AAAW;;AAA0B;;AACrC;;AAAoB;;AAAM;;AAE1B;;AAEI;;AAEJ;;AACI;AAAA,mBAAkB,IAAAQ,cAAA,qBAAlB;AAAqD,WAArD;;AACA;;AACI;;;;AAIJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAfwF;;AAAA,4FAAwB,aAAxB,EAAwB,iBAAxB;;AAE7D;;AAAA;;AAEiD;;AAAA;;AAG5C;;AAAA;;;;;;;;;;sEDFnBR,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTxI,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;gBACjC;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa+I,oB;;;AAEX,oCAAYC,YAAZ,EAA2CC,SAA3C,EAAoE;AAAA;;AAClED,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,sBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,sBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,+BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,+BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,+BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,GADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,+BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,wBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,wBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,wBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,wBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,wBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAGAH,oBAAY,CAACE,UAAb,CACE,IADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,yBAAzC,CAFF;AAIAH,oBAAY,CAACE,UAAb,CACE,SADF,EAEED,SAAS,CAACE,8BAAV,CAAyC,0BAAzC,CAFF;AAGD;;;;mCAEO,CACP;;;;;;;uBApGUJ,oB,EAAoB,uI,EAAA,uI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,kE;AAAA;;;;;sEAApBA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTjJ,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuCaoJ,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAzBhB,CACP,oFADO,EAEP,+EAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,2FANO,EAOP,wEAPO,EAQP,0EARO,EASP,wEATO,EAUP,8EAVO,CAyBgB,EAZvB,oFAYuB,EAXvB,+EAWuB,EAVvB,oEAUuB,EATvB,oEASuB,EARvB,sEAQuB,EAPvB,2FAOuB,EANvB,wEAMuB,EALvB,0EAKuB,EAJvB,wEAIuB,EAHvB,8EAGuB;;;;0HAAdA,c,EAAc;AAAA,kBAxBvB,oFAwBuB,EAvBvB,+EAuBuB,EAtBvB,oEAsBuB,EArBvB,oEAqBuB,EApBvB,sEAoBuB,EAnBvB,2FAmBuB,EAlBvB,wEAkBuB,EAjBvB,0EAiBuB,EAhBvB,wEAgBuB,EAfvB,8EAeuB;AAfN,kBAGjB,oFAHiB,EAIjB,+EAJiB,EAKjB,oEALiB,EAMjB,oEANiB,EAOjB,sEAPiB,EAQjB,2FARiB,EASjB,wEATiB,EAUjB,0EAViB,EAWjB,wEAXiB,EAYjB,8EAZiB;AAeM,O;AAHN,K;;;;;sEAGRA,c,EAAc;cA1B1B,sDA0B0B;eA1BjB;AACRxJ,iBAAO,EAAE,CACP,oFADO,EAEP,+EAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,2FANO,EAOP,wEAPO,EAQP,0EARO,EASP,wEATO,EAUP,8EAVO,CADD;AAaRT,iBAAO,EAAE,CACP,oFADO,EAEP,+EAFO,EAGP,oEAHO,EAIP,oEAJO,EAKP,sEALO,EAMP,2FANO,EAOP,wEAPO,EAQP,0EARO,EASP,wEATO,EAUP,8EAVO;AAbD,S;AA0BiB,Q;;;;;;;;;;;;;;;;;;ACvC3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAGO,QAAMkK,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBpD,gBAAU,EAAE,qCAFa;AAGzBC,YAAM,EAAC;AAHkB,KAApB;AAMP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AClBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYmD,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI/H,OAAO,CAAC2D,KAAR,CAAcoE,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WeatherWeekViewComponent } from './components/weather/weather-week-view/weather-week-view.component';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\n\n\nconst routes: Routes = [\n  { path: 'home', component: WeatherWeekViewComponent },\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  { path: 'favorites', component: FavoritesComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","\n<app-main-header></app-main-header>\n<div class=\"container\">\n    \n    <router-outlet></router-outlet>\n\n</div>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddCityModalComponent } from './components/favorites/add-city-modal/add-city-modal.component';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { WeatherItemComponent } from './components/weather/weather-item/weather-item.component';\nimport { WeatherWeekViewComponent } from './components/weather/weather-week-view/weather-week-view.component';\nimport { SearchLocationComponent } from './controls/search-location/search-location.component';\nimport { WeatherIconComponent } from './controls/weather-icon/weather-icon.component';\nimport { MaterialModule } from './providers/material/material.module';\nimport { MainHeaderComponent } from './controls/main-header/main-header.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherWeekViewComponent,\n    WeatherItemComponent,\n    FavoritesComponent,\n    WeatherIconComponent,\n    SearchLocationComponent,\n    AddCityModalComponent,\n    MainHeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { LocationModel } from '../../../providers/models/locations.model';\n\n@Component({\n  selector: 'app-add-city-modal',\n  templateUrl: './add-city-modal.component.html',\n  styleUrls: ['./add-city-modal.component.scss']\n})\nexport class AddCityModalComponent implements OnInit {\n\n  selectedLocation: LocationModel = null;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddCityModalComponent>,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getSelectedLocation(location: LocationModel): void {\n    this.selectedLocation = location;\n  }\n\n  closeModal(): void {\n    this.dialogRef.close();\n  }\n}\n","<h1>Add a city to favorite</h1>\n\n<app-search-location (setSelectedLocation)=\"getSelectedLocation($event)\"></app-search-location>\n\n<div mat-dialog-actions>\n    <button mat-button (click)=\"closeModal()\">close</button>\n    <button mat-button color=\"primary\" [mat-dialog-close]=\"selectedLocation\" cdkFocusInitial [disabled]=\"!selectedLocation\">Add</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { LocationModel } from '../../providers/models/locations.model';\nimport { AddCityModalComponent } from './add-city-modal/add-city-modal.component';\nimport { FavoritesService } from './favorites.service';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n\n  favoriteList$: Observable<LocationModel[]>;\n\n  constructor(\n    private favoriteService: FavoritesService,\n    public dialog: MatDialog,\n    private toastService: MatSnackBar,\n  ) { }\n\n  ngOnInit(): void {\n    this.getFavorites();\n\n  }\n\n  getFavorites(): void {\n    this.favoriteList$ = this.favoriteService.getFavoriteList();\n  }\n\n  addFavorites(): void {\n    const dialogRef = this.dialog.open(AddCityModalComponent, {\n      width: '500px',\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe((result: LocationModel) => {\n      if (result) {\n        console.log(result);\n        const success: boolean = this.favoriteService.addToFavorites(result);\n        const message =\n          success ? result.LocalizedName + ' added to favorites successfully' : 'Sorry, something went wrong, please try again';\n\n        this.showToast(message, success);\n      }\n    });\n  }\n\n  removeFromFavorite(location: LocationModel) {\n    this.favoriteService.removeFromFavorite(location.Key);\n    const message = location.LocalizedName + ' has been removed';\n    this.showToast(message, true);\n  }\n\n  showToast(message: string, success: boolean): void {\n    this.toastService.open(message, '', {\n      duration: 3000,\n      panelClass: success ? ['notif-success'] : ['notif-error']\n    });\n  }\n\n}\n\n","<div class=\"row title-wrapper justify-content-center\">\n    <div class=\"col-12 col-sm-8 col-md-8 col-lg-8 col-xl-8\">\n        <h1 class=\"title\">My Favorites</h1>\n    </div>\n</div>\n\n<div class=\"row justify-content-center\">\n    <ng-container *ngFor=\"let location of favoriteList$ | async\">\n        <div class=\"col-12 col-sm-6 col-md-4 col-lg-4  col-xl-2\">\n            <app-weather-item [locationData]=\"location\" [isFavoriteContext]=\"true\" (removeFromFavorite)=\"removeFromFavorite(location)\">\n            </app-weather-item>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"(favoriteList$ | async)?.length > 0\">\n            <button mat-mini-fab color=\"primary\" class=\"float\" (click)=\"addFavorites()\">\n                <mat-icon>add</mat-icon>\n            </button>\n    </ng-container>\n\n    <div class=\"text-center favorite-empty\" *ngIf=\"(favoriteList$ | async)?.length === 0\">\n        <div>\n            <mat-icon class=\"weather-icon\" svgIcon=\"weather\" aria-hidden=\"false\"></mat-icon>\n            <h3 class=\"text-row-1\">Your favorite list is empty...</h3>\n            <h3 class=\"text-row-2\">How would you know what to wear?</h3>\n            <h3 class=\"text-row-3\">Add a city to your favorite list for the answer..</h3>\n        </div>\n        <app-weather-icon></app-weather-icon>\n        <button mat-mini-fab color=\"primary\" (click)=\"addFavorites()\">\n            <mat-icon>add</mat-icon>\n        </button>\n    </div>\n\n\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LocationModel } from '../../providers/models/locations.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavoritesService {\n\n  private favoriteListSubject = new BehaviorSubject<LocationModel[]>([]);\n  private favoriteLocalStorageName: 'weather-app.favorites';\n\n  constructor() { }\n\n  addToFavorites(location: LocationModel): boolean {\n\n    const isNotExist = !this.checkIfExist(location.Key);\n    if (isNotExist) {\n      let newList = this.getFavoritesSync();\n      newList.push(location);\n      this.favoriteListSubject.next(newList);\n      localStorage.setItem(this.favoriteLocalStorageName, JSON.stringify(newList));\n    }\n\n    return isNotExist;\n  }\n\n  removeFromFavorite(locationKey: number): void {\n    const filteredList = this.getFavoritesSync().filter(f => f.Key !== locationKey);\n    localStorage.setItem(this.favoriteLocalStorageName, JSON.stringify(filteredList));\n    this.favoriteListSubject.next(filteredList);\n  }\n\n  public getFavoritesSync(): LocationModel[] {\n    const localStorageData = localStorage.getItem(this.favoriteLocalStorageName);\n    if(localStorageData){\n      return JSON.parse(localStorageData);\n    }\n    return [];\n  }\n\n  getFavoriteList(): Observable<LocationModel[]> {\n    this.favoriteListSubject.next(this.getFavoritesSync());\n    return this.favoriteListSubject.asObservable();\n  }\n\n  checkIfExist(locationKey: number): boolean {\n    return this.getFavoritesSync().find(f => f.Key === locationKey) != null;\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { LocationModel } from '../../../providers/models/locations.model';\nimport { WeatherItemModel } from '../../../providers/models/weather-item.model';\nimport { WeatherService } from '../weather.service';\nimport { trigger, transition, style, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-weather-item',\n  templateUrl: './weather-item.component.html',\n  styleUrls: ['./weather-item.component.scss'],\n  animations: [\n    trigger('loadItemAnimation',\n      [\n        transition(':enter',\n          [\n            style({ height: 0, opacity: 0 }),\n            animate('0.3s ease-out',\n              style({ height: 300, opacity: 1 }))\n          ]\n        )\n      ]\n    )\n  ]\n})\n\nexport class WeatherItemComponent implements OnInit {\n\n  @Input() weatherItem?: WeatherItemModel;\n  @Input() locationData: LocationModel = null;\n  @Input() isFavoriteContext = false;\n  @Output() removeFromFavorite: EventEmitter<void> = new EventEmitter();\n\n  isDataReady = false;\n\n  constructor(\n    private weatherService: WeatherService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.isFavoriteContext && this.locationData) {\n      this.getCurrentWeather();\n    } else {\n      this.isDataReady = true;\n    }\n  }\n\n  clickOnRemoveFromFavorite() {\n    this.removeFromFavorite.emit();\n  }\n\n  getCurrentWeather() {\n    this.weatherService.getCurrentWeatherByLocation(this.locationData.Key).subscribe(result => {\n      this.weatherItem = result;\n      this.isDataReady = true;\n    });\n  }\n\n}\n","<div class=\"card text-center weather-weekly-card\" *ngIf=\"isDataReady\" [@loadItemAnimation]>\n\n    <ng-container *ngIf=\"isFavoriteContext\">\n        <button mat-button color=\"warn\" class=\"btn-remove-favorite\" (click)=\"clickOnRemoveFromFavorite()\">\n            <mat-icon>remove_circle_outline</mat-icon>\n            Remove\n        </button>\n    </ng-container>\n\n    <div class=\"card-header\">\n\n        <mat-icon class=\"weather-icon\" svgIcon=\"{{weatherItem.weatherIcon}}\" aria-hidden=\"false\"></mat-icon>\n        <div class=\"location\" *ngIf=\"locationData\">\n            {{locationData.LocalizedName}}\n            <small class=\"text-muted\"> |\n                {{locationData.Country.LocalizedName}}\n            </small>\n        </div>\n        <div class=\"date\" *ngIf=\"!locationData\">{{weatherItem.date | date:'EEEE' }}</div>\n\n    </div>\n    <div class=\"card-body\">\n        <p class=\"card-text\">\n            <span class=\"degree\"> {{weatherItem.temperature.max.Value | number: '1.0-0'}}°</span>\n            <span class=\"degree min\" *ngIf=\"weatherItem.temperature.min\">\n                {{weatherItem.temperature.min?.Value | number:'1.0-0'}}°</span>\n        </p>\n        <div class=\"summary\">\n            {{weatherItem.weatherDescription}}\n        </div>\n    </div>\n\n</div>\n\n<app-weather-icon></app-weather-icon>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { FavoritesService } from '../../favorites/favorites.service';\nimport { LocationModel } from '../../../providers/models/locations.model';\nimport { WeatherItemModel } from '../../../providers/models/weather-item.model';\nimport { WeatherService } from '../weather.service';\n\n\n@Component({\n  selector: 'app-weather-week-view',\n  templateUrl: './weather-week-view.component.html',\n  styleUrls: ['./weather-week-view.component.scss']\n})\nexport class WeatherWeekViewComponent implements OnInit {\n\n  suggestedLocationList$: Observable<LocationModel[]>;\n  weeklyData$: Observable<WeatherItemModel[]>;\n  searchControl = new FormControl();\n\n  selectedLocation: LocationModel;\n  currentWeather: WeatherItemModel;\n  currentWeatherIcon: string;\n  includedInFavorite = false;\n  isDataReady = false;\n  constructor(\n    private weatherService: WeatherService,\n    private favoriteService: FavoritesService,\n    private toastService: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n    this.getDeviceLocation();\n  }\n\n  getDeviceLocation(): void {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.weatherService.getLocationKeyByGeoPosition(position.coords.latitude, position.coords.longitude)\n          .subscribe((result: LocationModel) => {\n            this.selectedLocation = result;\n            this.updateLocation(this.selectedLocation);\n            this.isDataReady = true;\n          },\n          error => {\n            this.showToast(error.message, false);\n          });\n      });\n    } else {\n      this.selectedLocation = this.weatherService.defaultLocation;\n    }\n  }\n\n  getSelectedLocation(location: LocationModel): void {\n    this.selectedLocation = location;\n    this.updateLocation(location);\n  }\n\n  getWeatherForecast(locationKey: number): void {\n    this.weeklyData$ = this.weatherService.getWeatherForecast(locationKey);\n  }\n\n  getCurrentWeatherByLocation(locationKey: number): void {\n    this.weatherService.getCurrentWeatherByLocation(locationKey).subscribe(result => {\n      this.currentWeather = result;\n      this.currentWeatherIcon = `assets/img/${this.weatherService.getCurrentWeatherIcon(this.currentWeather.weatherIcon)}.svg`;\n    },\n      error => {\n        this.showToast(error.message, false);\n      });\n  }\n\n  setLocationAsFavorite(): void {\n\n    const success: boolean = this.favoriteService.addToFavorites(this.selectedLocation);\n    this.includedInFavorite = success;\n    const message =\n      success ? this.selectedLocation.LocalizedName + ' added to favorites successfully' : 'Sorry, something went wrong, please try again';\n\n    this.showToast(message, true);\n  }\n\n  updateLocation(location: LocationModel): void {\n    this.getWeatherForecast(location.Key);\n    this.getCurrentWeatherByLocation(location.Key);\n    this.includedInFavorite = this.favoriteService.checkIfExist(location.Key);\n  }\n\n  /////Healper Functions/////\n\n  showToast(message: string, success: boolean): void {\n    this.toastService.open(message, '', {\n      duration: 3000,\n      panelClass: success ? ['notif-success'] : ['notif-error']\n\n    });\n  }\n\n}\n","<ng-container *ngIf=\"isDataReady\">\n\n    <div class=\"row location-details-wrapper justify-content-center\"\n        [ngStyle]=\"{'background-image': 'linear-gradient(to bottom, rgba(245, 246, 252, 0.3), rgba(117, 19, 93, 0.6)), url('+ currentWeatherIcon+')'}\">\n        <div class=\"col-12 text-center\">\n            <app-search-location (setSelectedLocation)=\"getSelectedLocation($event)\"></app-search-location>\n        </div>\n\n        <div class=\"col-2 col-sm-2 col-md-1 col-lg-1 col-xl-1 text-right\">\n            <button mat-mini-fab color=\"primary\" class=\"favorite-button\" (click)=\"setLocationAsFavorite()\"\n                *ngIf=\"!includedInFavorite\">\n                <mat-icon>star</mat-icon>\n            </button>\n        </div>\n\n        <div class=\"col-10 col-sm-8 col-md-8 col-lg-8 col-xl-8\">\n            <h2 class=\"location-name\"> {{selectedLocation?.LocalizedName}}\n                <small class=\"country\">\n                    |\n                    {{selectedLocation?.Country?.LocalizedName}}\n                </small>\n            </h2>\n            <h3 class=\"weather-description\">{{currentWeather?.weatherDescription}}\n                <small> now with {{currentWeather?.temperature?.max?.Value | number:'1.0-0'}}°</small>\n            </h3>\n        </div>\n    </div>\n\n\n    <div class=\"row justify-content-center\">\n        <ng-container *ngFor=\"let day of weeklyData$ | async\">\n            <div class=\"col-10 col-sm-6 col-md-4 col-lg-4  col-xl-2\">\n                <app-weather-item [weatherItem]=\"day\"></app-weather-item>\n            </div>\n        </ng-container>\n    </div>\n\n</ng-container>\n\n<ng-container *ngIf=\"!isDataReady\">\n    <div class=\"text-center loader\">\n        <div>\n            <mat-icon class=\"weather-icon\" svgIcon=\"weather\" aria-hidden=\"false\"></mat-icon>\n            <h3 class=\"text-row-1\">Loading...</h3>\n        </div>\n        <app-weather-icon></app-weather-icon>\n    </div>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { WeatherItemModel } from '../../providers/models/weather-item.model';\nimport { CurrentWeather } from '../../providers/models/current-weather.model';\nimport { DailyForecasts } from '../../providers/models/daily-forecasts.model';\nimport { LocationModel } from '../../providers/models/locations.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  defaultLocation: LocationModel = {\n    Key: 215854,\n    LocalizedName: 'Tel Aviv',\n    Country: {\n      ID: 'IL',\n      LocalizedName: 'Israel'\n    }\n  };\n\n  private selectedLocationSubject = new BehaviorSubject<LocationModel>(this.defaultLocation);\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  getWeatherForecast(locationKey: number): Observable<WeatherItemModel[]> {\n    return this.http\n      .get\n      (\n        `${environment.baseApiUrl}/forecasts/v1/daily/5day/${locationKey}?apikey=${environment.apiKey}&metric=true`\n      )\n      .pipe(\n        map((response: any) =>\n          this.convertDailyWeatherToMainModel(response.DailyForecasts)\n        )\n      );\n  }\n\n\n  getLocationSuggestion(searchInput: string): Observable<any> {\n    return this.http\n      .get(\n        `${environment.baseApiUrl}/locations/v1/cities/autocomplete?apikey=${environment.apiKey}&q=${searchInput}`\n      );\n  }\n\n  getCurrentWeatherByLocation(locationKey: number): Observable<WeatherItemModel> {\n    return this.http.get(\n      `${environment.baseApiUrl}/currentconditions/v1/${locationKey}?apikey=${environment.apiKey}`\n    ).pipe(\n      map((currentWeather: any) =>\n        this.convertCurrentWeatherToMainModel(currentWeather[0])\n      ));\n  }\n\n  getLocationKeyByGeoPosition(lat: number, lon: number): Observable<LocationModel> {\n    return this.http\n      .get(\n        `${environment.baseApiUrl}/locations/v1/cities/geoposition/search?apikey=${environment.apiKey}&q=${lat},${lon}`\n      ).pipe(\n        map((result: any) =>\n          this.convertLocationToMainModel(result)\n        )\n      );\n  }\n\n  convertCurrentWeatherToMainModel(currentWeather: CurrentWeather): WeatherItemModel {\n    const weatherItem: WeatherItemModel = {\n      date: currentWeather.LocalObservationDateTime,\n      weatherIcon: currentWeather.WeatherIcon,\n      weatherDescription: currentWeather.WeatherText,\n      temperature: {\n        max:\n        {\n          Value: currentWeather.Temperature.Metric.Value,\n          Unit: currentWeather.Temperature.Metric.Unit,\n          UnitType: currentWeather.Temperature.Metric.UnitType\n        },\n        min: null\n      }\n    };\n    return weatherItem;\n  }\n\n  convertLocationToMainModel(location: any): LocationModel {\n    const newLocationModel: LocationModel = {\n      Key: location.Key,\n      LocalizedName: location.LocalizedName,\n      Country: {\n        ID: location.Country.ID,\n        LocalizedName: location.Country.LocalizedName\n      }\n    };\n    return newLocationModel;\n  }\n\n\n  convertDailyWeatherToMainModel(dailyWeatherData: DailyForecasts[]): WeatherItemModel[] {\n    const weatherItem: WeatherItemModel[] = dailyWeatherData.map(item => ({\n      date: item.Date,\n      weatherIcon: item.Day.Icon,\n      weatherDescription: item.Day.IconPhrase,\n      temperature: {\n        max: item.Temperature.Maximum,\n        min: item.Temperature.Minimum\n      }\n    }));\n    return weatherItem;\n  }\n\n\n  //I've decided to marge some icons\n  getCurrentWeatherIcon(weatherIcon: number) {\n    if (weatherIcon <= 5) {\n      return 'sunny';\n    }\n    if (weatherIcon === 6) {\n      return 'sunny-cloudy';\n    }\n    if (weatherIcon <= 11) {\n      return 'cloud';\n    }\n    if (weatherIcon <= 18) {\n      return 'rain';\n    }\n    if (weatherIcon <= 29) {\n      return 'snow';\n    }\n    if (weatherIcon <= 30) {\n      return 'sunny';\n    }\n    if (weatherIcon <= 44) {\n      return 'night';\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-header',\n  templateUrl: './main-header.component.html',\n  styleUrls: ['./main-header.component.scss']\n})\nexport class MainHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  title = \"Nati's Weather\";\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <div class=\"logo-holder\" [routerLink]=\"['/home']\">\n            <!-- <img src=\"../assets/img/logo.png\"> -->\n            <img src=\"assets/img/logo.png\">\n\n            <span href=\"#\">{{title}}</span>\n        </div>\n        <span class=\"spacer\"></span>\n        <button mat-button [routerLink]=\"['/favorites']\">\n            <mat-icon>star</mat-icon>\n            Favorites\n        </button>\n    </mat-toolbar-row>\n</mat-toolbar>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { WeatherService } from 'src/app/components/weather/weather.service';\nimport { LocationModel } from 'src/app/providers/models/locations.model';\n\n@Component({\n  selector: 'app-search-location',\n  templateUrl: './search-location.component.html',\n  styleUrls: ['./search-location.component.scss']\n})\nexport class SearchLocationComponent implements OnInit {\n  @Output() setSelectedLocation: EventEmitter<LocationModel> = new EventEmitter<LocationModel>();\n\n  searchControl = new FormControl();\n  suggestedLocationList$: Observable<LocationModel[]>;\n\n  constructor(\n    private weatherService: WeatherService\n  ) { }\n\n  ngOnInit(): void {\n    this.searchControl.valueChanges\n      .pipe(\n        debounceTime(400),\n      )\n      .subscribe((input) => {\n        if (this.searchControl.valid && input.length >= 2) {\n          this.suggestedLocationList$ = this.weatherService.getLocationSuggestion(input);\n        }\n      });\n  }\n\n  displayFn(location: LocationModel) {\n    if (location) { return location.LocalizedName; }\n  }\n\n  selectLocation(location: LocationModel) {\n    this.setSelectedLocation.emit(location);\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-12 search-box-wrapper\">\n        <mat-form-field appearance=\"fill\" class=\"search-box-field\">\n            <mat-label>Search Weather By Location</mat-label>\n            <mat-icon matSuffix>search</mat-icon>\n\n            <input matInput type=\"text\" placeholder=\"select a city\" aria-label=\"Number\" [matAutocomplete]=\"auto\"\n                [formControl]=\"searchControl\" oninput=\"this.value=this.value.replace(/[^a-zA-Z ]/g,'');\">\n                <mat-error *ngIf=\"searchControl.invalid\">Please type with English letter only</mat-error>\n\n            <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"displayFn\"\n                (optionSelected)='selectLocation($event.option.value)'>\n                <ng-container>\n                    <mat-option *ngFor=\"let option of suggestedLocationList$ | async\" [value]=\"option\">\n                        <span class=\"location-name\">{{option.LocalizedName}}</span>\n                        <small class=\"text-muted\"> | {{option.Country.LocalizedName}}</small>\n                    </mat-option>\n                </ng-container>\n            </mat-autocomplete>\n        </mat-form-field>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n\n@Component({\n  selector: 'app-weather-icon',\n  templateUrl: './weather-icon.component.html',\n  styleUrls: ['./weather-icon.component.scss']\n})\nexport class WeatherIconComponent implements OnInit {\n\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n      \"1\",\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/day.svg'));\n    iconRegistry.addSvgIcon(\n      '2',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/day.svg'));\n    iconRegistry.addSvgIcon(\n      '3',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy-day-2.svg'));\n    iconRegistry.addSvgIcon(\n      '4',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy-day-3.svg'));\n    iconRegistry.addSvgIcon(\n      '5',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy-day-3.svg'));\n    iconRegistry.addSvgIcon(\n      '6',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '7',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '8',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '9',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '11',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '12',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/rainy-7.svg'));\n    iconRegistry.addSvgIcon(\n      '13',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/rainy-1.svg'));\n    iconRegistry.addSvgIcon(\n      '14',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/rainy-1.svg'));\n    iconRegistry.addSvgIcon(\n      '15',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/thunder.svg'));\n    iconRegistry.addSvgIcon(\n      '16',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/rainy-1.svg'));\n    iconRegistry.addSvgIcon(\n      '17',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/rainy-1.svg'));\n    iconRegistry.addSvgIcon(\n      '18',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/rainy-7.svg'));\n    iconRegistry.addSvgIcon(\n      '19',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '20',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy-day-1.svg'));\n    iconRegistry.addSvgIcon(\n      '22',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/snowy-6.svg'));\n    iconRegistry.addSvgIcon(\n      '25',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/snowy-4.svg'));\n    iconRegistry.addSvgIcon(\n      '26',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/snowy-4.svg'));\n    iconRegistry.addSvgIcon(\n      '30',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/night.svg'));\n    iconRegistry.addSvgIcon(\n      '31',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/night.svg'));\n    iconRegistry.addSvgIcon(\n      '32',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/night.svg'));\n    iconRegistry.addSvgIcon(\n      '33',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/night.svg'));\n    iconRegistry.addSvgIcon(\n      '34',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/night.svg'));\n    iconRegistry.addSvgIcon(\n      '35',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '36',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n    iconRegistry.addSvgIcon(\n      '37',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/cloudy.svg'));\n\n    iconRegistry.addSvgIcon(\n      'weather',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/weather.svg'));\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSnackBarModule\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSnackBarModule\n  ]\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\nexport const environment = {\n  production: false,\n  baseApiUrl: 'https://dataservice.accuweather.com',\n  apiKey:'KZFxfgG0PNcS7lBS6K49CfCHn0rPNgJG'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}